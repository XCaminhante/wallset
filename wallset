#!/bin/bash
#@+leo-ver=5-thin
#@+node:caminhante.20240213010725.2: * @file wallset
#@@first
#@@tabwidth -2
shopt -s extglob
#@+others
#@+node:caminhante.20240213012511.1: ** /sobre
#@+at
# wallset: This program customizes images and videos for wallpaper
# author: Marcos Oliveira
# website: https://terminalroot.com.br/
# contributor: X Caminhante
# website: 
# dependencies: bash, sed, ffmpeg, feh, imagemagick(convert), procps(pgrep)
#
# This program is free software: you can redistribute it and/or modify it under the terms of
# the GNU General Public License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
#@+node:caminhante.20240213012426.1: ** function _usage
function _usage {
  sed '/^#/d; /^`/d;' <<'EOF'
#@+others
#@+node:caminhante.20240213142725.1: *3* Usage
```sh
Wallset: shows one or more images in a loop as a live wallpaper
Version 0.2

Usage: wallset [options]
Options:
  -i,--image <image file.{jpg,png}>
  Replaces the current set of wallpaper images with this image
  Use any file format supported by imagemagick

  -v,--video <video file.{mp4,mkv,webm}>
  Replaces the current set of wallpaper images for the frames of a video excerpt
  Use any file format supported by ffmpeg

  -f,--from 00:00
  Pass this argument before -v, it defines from which point in the video the excerpt starts
  By default, wallset extracts the excerpt from the beginning of the video (point 00:00)
  Consult the ffmpeg manual if you have any doubts about the syntax

  -d,--duration 10s
  Pass this argument before -v, it defines how many seconds to extract from the video
  By default, wallset extracts 10 seconds from the video (that's approximately 300 frames)
  Consult the ffmpeg manual if you have any doubts about the syntax

  -a,--append-image <image file.{jpg,png}>
  Appends an image to the current wallpaper image set
  This argument can be used several times on the same command line
  It can be used in conjunction with -i or -v, but must appear after both of them
  Use any file format supported by imagemagick

  -t,--transition 0.1
  Sets the approximate time between one image and the next in the wallpaper display
  By default wallset uses 0.1 second
  Don't use sleep suffixes, only pass the float number of seconds

  -z,--zoom-mode <fill|scale|center|tile|max>
  Sets the zoom mode feh will use when applying each image at the background
  Consult the feh manpage, specifically the --bg-* arguments, if you have any doubts about their effects

  -p,--pause
  Stops the wallpaper image display loop

  -s,--start
  Starts the wallpaper image display loop
  When you use the -i or -v arguments, the loop starts automatically

  -c,--config
  Shows the actual configuration.

  --loop
  For internal use only.

  -h,--help
  Shows this message

The set of images is stored in ~/.config/wallset/
```
#@-others
EOF
exit
}
#@+node:caminhante.20240213125451.1: ** function _shell_sleep
function _shell_sleep {
  ! read -u 1 -t $1 2>/dev/null </dev/zero
}
#@+node:caminhante.20240213125458.1: ** function _shell_cat
function _shell_cat {
  local a
  [[ $# -gt 0 ]] && \
    { while read a; do echo $a; done } < "$1" || \
    { while read a; do echo $a; done }
}
#@+node:caminhante.20240213123219.1: ** function _feh_image
function _feh_image {
  local file="$1"
  feh --no-fehbg --bg-${SCALE_MODE} "${file}" # 2>/dev/null >/dev/null
}
#@+node:caminhante.20240213132656.1: ** function _clear_frames
function _clear_frames {
  _pause_wallpaper_loop
  find "$WALLPAPER_DIR" -mindepth 1 -delete && \
    echo "wallpaper frames set cleared"
}
#@+node:caminhante.20240213123737.1: ** function _video_to_frames
function _video_to_frames {
  local origin="$1"
  [[ -f "$origin" ]] || { echo "ERROR: _video_to_frames: origin file does not exist"; exit 1; }
  echo "preparing frames..."
  ffmpeg -y -ss $CUTSTART -i "$origin" -qscale:v 2 -t $DURATION \
  "${WALLPAPER_DIR}/frame%08d.png" >/dev/null 2>&1 && \
    echo "frames extrated from '${1}', cut starting at ${CUTSTART}, duration ${DURATION}"
}
#@+node:caminhante.20240213140604.1: ** function _utcnanodate
function _utcnanodate {
  date -u '+%FT%T.%NZ'
}
#@+node:caminhante.20240213133653.1: ** function _append_image
function _append_image {
  local origin="$1"
  # local destination="$(mktemp -u -p "$WALLPAPER_DIR" -t 'frameXXXXXXXX.png')"
  local destination="${WALLPAPER_DIR}/frame$(_utcnanodate).png"
  [[ -f "$origin" ]] || { echo "ERROR: _append_image: origin file does not exist"; exit 1; }
  cp "$origin" "$destination" && \
    echo "image '${1}' added to wallpaper frames set"
}
#@+node:caminhante.20240213134749.1: ** function _set_image
function _set_image {
  _clear_frames
  _append_image "$1"
}
#@+node:caminhante.20240213134839.1: ** function _set_video
function _set_video {
  _clear_frames
  _video_to_frames "$1"
}
#@+node:caminhante.20240213124548.1: ** function _kill_loop
function _kill_loop {
  pgrep -f 'wallset --loop' | xargs -r kill -TERM
}
#@+node:caminhante.20240213135708.1: ** function _set_cutstart
function _set_cutstart {
  CUTSTART="$1"
  _save_config && echo "CUTSTART set to ${CUTSTART}"
}
#@+node:caminhante.20240213135734.1: ** function _set_duration
function _set_duration {
  DURATION="$1"
  _save_config && echo "DURATION set to ${DURATION}"
}
#@+node:caminhante.20240213135743.1: ** function _set_transition
function _set_transition {
  TRANSITION="$1"
  _save_config && echo "TRANSITION set to ${TRANSITION}"
}
#@+node:caminhante.20240213135748.1: ** function _set_scale_mode
function _set_scale_mode {
  case "$1" in
    'fill'|'scale'|'center'|'tile'|'max') ;;
    *) echo "ERROR: _set_scale_mode: invalid zoom mode"; exit 1;;
  esac
  SCALE_MODE="$1"
  _save_config && echo "SCALE_MODE set to ${SCALE_MODE}"
}
#@+node:caminhante.20240213145217.1: ** function _show_config
function _show_config {
  _shell_cat "$CONFIG_FILE"
}
#@+node:caminhante.20240213130523.1: ** function _save_config
function _save_config {
  _shell_cat <<EOF > "$CONFIG_FILE"
CUTSTART="${CUTSTART:-00:00}"
DURATION="${DURATION:-10}"
TRANSITION="${TRANSITION:-0.1}"
SCALE_MODE=${SCALE_MODE:-scale}
EOF
}
#@+node:caminhante.20240213124955.1: ** function _internal_loop
function _internal_loop {
  local frames=( $(find "$WALLPAPER_DIR" -mindepth 1 | sort) )
  local nframes=$(printf '"%s"\n' "${frames[@]}" | wc -l)
  [[ $nframes -eq 0 ]] && { echo "ERROR: _internal_loop: no frames to present"; exit 1; }
  if [[ $nframes -eq 1 ]]; then
    _feh_image "${frames[0]}"
  else
    while :; do
      printf '%s\n' "${frames[@]}" | while read file; do
        _feh_image "$file" && \
        _shell_sleep $TRANSITION
      done
    done
  fi
}
#@+node:caminhante.20240213130854.1: ** function _pause_wallpaper_loop
function _pause_wallpaper_loop {
  _kill_loop && \
    echo "wallpaper frames repaint loop stopped"
}
#@+node:caminhante.20240213130926.1: ** function _start_wallpaper_loop
function _start_wallpaper_loop {
  _kill_loop
  wallset --loop &
  echo "wallpaper frames repaint loop started"
}
#@+node:caminhante.20240213131352.1: ** function _verify_command
function _verify_command {
  command -v $1 >/dev/null || { echo "ERROR: _verify_command: ${1} command could not be found as builtin or at \$PATH"; exit 1; }
}
#@+node:caminhante.20240213125814.1: ** /variáveis e configuração
CONFIG_DIR="${HOME}/.config/wallset"
WALLPAPER_DIR="${CONFIG_DIR}/frames/"
CONFIG_FILE="${CONFIG_DIR}/config"

mkdir -p "$WALLPAPER_DIR"
[ -f "$CONFIG_FILE" ] || _save_config
. "$CONFIG_FILE"
#@+node:caminhante.20240213131038.1: ** /verificação
# wallset precisa estar acessível em $PATH para o script funcionar corretamente
_verify_command wallset
_verify_command sed
_verify_command pgrep
_verify_command feh
_verify_command ffmpeg
#@+node:caminhante.20240213023405.1: ** /principal
NEED_RESTART=
if [[ "$1" =~ ^((-{1,2})([Hh]$|[Hh][Ee][Ll][Pp])|)$ ]]; then
  _usage
  exit 1
else
  while [[ $# -gt 0 ]]; do
    opt="$1"
    shift
    case "$opt" in
      "-i"|"--image"    ) _set_image "$1"; NEED_RESTART=y; shift;;
      "-v"|"--video"    ) _set_video "$1"; NEED_RESTART=y; shift;;
      "-f"|"--from"     ) _set_cutstart "$1"; shift;;
      "-d"|"--duration" ) _set_duration "$1"; shift;;
      "-a"|"--append-image" ) _append_image "$1"; NEED_RESTART=y; shift;;
      "-t"|"--transition" ) _set_transition "$1"; NEED_RESTART=y; shift;;
      "-z"|"--zoom-mode"  ) _set_scale_mode "$1"; NEED_RESTART=y; shift;;
      "-p"|"--pause"  ) _pause_wallpaper_loop;;
      "-s"|"--start"  ) _start_wallpaper_loop;;
      "-c"|"--config" ) _show_config;;
      "--loop" ) _internal_loop;;
      *) echo "ERROR: Invalid option: \"${opt}\"" >&2; exit 1;;
    esac
  done
fi
[[ -z $NEED_RESTART ]] || _start_wallpaper_loop
exit 0
#@-others
#@-leo
